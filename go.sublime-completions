{
    "scope": "source.go",
    "completions":
    [
    	{ "trigger": "pkgm\tmain func", "contents": "package main\n\nfunc main(){$1}" },
    	{ "trigger": "hand\thttp handler", "contents": "func ${1:handle}(${2:w} http.ResponseWriter, ${3:r} *http.Request){$4}" },
        { "trigger": "handm\thttp handler middleware", "contents": "func ${1:middleware}(next http.Handler) http.Handler {\n\treturn http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n\t\t$2next.ServeHTTP(w, r)\n\t})\n}"},
    	{ "trigger": "redir\thttp.Redirect", "contents": "http.redirect(${1:w},${2:r},${3:\"/\"},${4:http.StatusFound})" },
    	{ "trigger": "herr\thttp.Error", "contents": "http.Error(${1:w},${2:message},${3:http.StatusError})" },
        { "trigger": "haf\thttp.HandleFunc", "contents": "${1:http}.HandleFunc(\"${2:/}\",${3:handler})" },
    	{ "trigger": "hss\thttp serve static", "contents": "${1:fs} := http.FileServer(http.Dir(\"${2:./static}\"))\nhttp.Handle(\"${3:/static/}\", http.StripPrefix(\"${3:/static/}\", ${1:fs}))" },
    	{ "trigger": "las\thttp.ListenAndServe", "contents": "http.ListenAndServe(\"${1::8080}\",${2:nil})" },
    	{ "trigger": "tfunc\tTestFunction", "contents": "func Test${1:Function}(t *testing.T){$2}" },
    	{ "trigger": "tfunct\tTestTableFunction", "contents": "func Test${1:Function}(t *testing.T) {\n\ttestCase := []struct{\n\t\t${2:// case []string \n\t\t// want string}\n\t}{${3: /* test case */ }}\n\tfor _, tc := range testCase {\n\t\t${4:// test here}\n\t}\n}" },    	
    ]
}